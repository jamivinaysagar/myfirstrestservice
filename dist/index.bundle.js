module.exports=function(e){var t={};function n(o){if(t[o])return t[o].exports;var s=t[o]={i:o,l:!1,exports:{}};return e[o].call(s.exports,s,s.exports,n),s.l=!0,s.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(o,s,function(t){return e[t]}.bind(null,s));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t){e.exports=require("mongoose")},function(e,t,n){"use strict";const o=n(2),s=n(3),r=n(4),d=n(0),a=o();a.use(s.urlencoded({extended:!0})),a.use(s.json()),d.Promise=global.Promise,d.connect(r.url,{useNewUrlParser:!0}).then(()=>{console.log("Successfully connected to the database")}).catch(e=>{console.log("Could not connect to the database. Exiting now...",e),process.exit()}),a.get("/",(e,t)=>{t.json({message:"Welcome to my first node  application."})}),n(5)(a),a.listen(3e3,()=>{console.log("Server is listening on port 3000")})},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("body-parser")},function(e,t,n){"use strict";e.exports={url:"mongodb://localhost:27017/message-bot"}},function(e,t,n){"use strict";e.exports=(e=>{const t=n(6);e.post("/notes",t.create),e.get("/notes",t.findAll),e.get("/notes/:noteId",t.findOne),e.put("/notes/:noteId",t.update),e.delete("/notes/:noteId",t.delete)})},function(e,t,n){"use strict";const o=n(7);t.create=((e,t)=>{if(!e.body.content)return t.status(400).send({message:"Note content can not be empty"});new o({title:e.body.title||"Untitled Note",content:e.body.content}).save().then(e=>{t.send(e)}).catch(e=>{t.status(500).send({message:e.message||"Some error occurred while creating the Note."})})}),t.findAll=((e,t)=>{o.find().then(e=>{t.send(e)}).catch(e=>{t.status(500).send({message:e.message||"Some error occurred while retrieving notes."})})}),t.findOne=((e,t)=>{o.findById(e.params.noteId).then(n=>{if(!n)return t.status(404).send({message:"Note not found with id "+e.params.noteId});t.send(n)}).catch(n=>"ObjectId"===n.kind?t.status(404).send({message:"Note not found with id "+e.params.noteId}):t.status(500).send({message:"Error retrieving note with id "+e.params.noteId}))}),t.update=((e,t)=>{if(!e.body.content)return t.status(400).send({message:"Note content can not be empty"});o.findByIdAndUpdate(e.params.noteId,{title:e.body.title||"Untitled Note",content:e.body.content},{new:!0}).then(n=>{if(!n)return t.status(404).send({message:"Note not found with id "+e.params.noteId});t.send(n)}).catch(n=>"ObjectId"===n.kind?t.status(404).send({message:"Note not found with id "+e.params.noteId}):t.status(500).send({message:"Error updating note with id "+e.params.noteId}))}),t.delete=((e,t)=>{o.findByIdAndRemove(e.params.noteId).then(n=>{if(!n)return t.status(404).send({message:"Note not found with id "+e.params.noteId});t.send({message:"Note deleted successfully!"})}).catch(n=>"ObjectId"===n.kind||"NotFound"===n.name?t.status(404).send({message:"Note not found with id "+e.params.noteId}):t.status(500).send({message:"Could not delete note with id "+e.params.noteId}))})},function(e,t,n){"use strict";const o=n(0),s=o.Schema({title:String,content:String},{timestamps:!0});e.exports=o.model("Note",s)}]);